<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="login.html"/>
        <!-- 登录之后，访问没有权限的页面，跳转到 403 页面 -->
        <property name="unauthorizedUrl" value="403.html"/>
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /subLogin = anon
                /testRole = roles["admin", "admin1"]
                /testRole1 = rolesOr["admin", "admin1"]
                <!--/testRole = roles["admin"] &lt;!&ndash; /testRole 必须要具备 admin 角色才可以访问&ndash;&gt;-->
                <!--/testRole1 = roles["admin","admin1"]&lt;!&ndash; /testRole1 必须要同时具备 admin 和 admin1 角色才可以访问&ndash;&gt;-->
                <!--/testPerms = perms["user:delete"]-->
                <!--/testPerms1 = perms["user:delete", "user:update"]-->
                /* = authc
            </value>
        </property>
        <property name="filters">
            <util:map>
                <entry key="rolesOr" value-ref="rolesOrFilter"/>
            </util:map>
        </property>
    </bean>


    <!-- 自定义 filter -->
    <bean id="rolesOrFilter" class="com.xlh.shiro.filter.RolesOrFilter"/>

    <!-- 创建 securityManager 对象 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realm"/>
        <property name="sessionManager" ref="sessionManager" />
    </bean>

    <bean id="realm" class="com.xlh.shiro.realm.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!-- 设置加密算法以及加密次数 -->
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDao"/>
    </bean>

    <!--<bean id="sessionManager" class="com.xlh.shiro.session.CustomSessionManager">-->
        <!--<property name="sessionDAO" ref="redisSessionDao"/>-->
    <!--</bean>-->
    <bean class="com.xlh.shiro.session.RedisSessionDao" id="redisSessionDao"/>

</beans>